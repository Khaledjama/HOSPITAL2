//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HOSPITAL2.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using HOSPITAL2.Models;
    public partial class patient
    {
        private HospitalEntities10 db = new HospitalEntities10();
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public patient()
        {
            this.data_Patient = new HashSet<data_Patient>();
            this.data_Patient1 = new HashSet<data_Patient>();
        }
    
        public string Name { get; set; }
        public string Adress { get; set; }
        public int age { get; set; }
        public Nullable<int> Id_Doc { get; set; }
        public int Id { get; set; }
        public string Id_dep { get; set; }
        public Nullable<System.DateTime> dat { get; set; }
        public int number { get; set; }
        public string User_Id { get; set; }
        public string Serial_Num { get; set; }
        public Nullable<bool> Statues { get; set; }
        public bool ExistPatient(patient patient)
        {
            bool StatuesPatient = false;
            var Patients = db.patient.ToList();
            foreach (var item in Patients)
            {
                if (patient.Equals(item))
                {
                    StatuesPatient = true;
                    break;
                }

            }
            return StatuesPatient;
        }
        public int PutNumberofPook(patient patient)
        {
            var Num_Reaval = db.Doctor.Find(patient.Id_Doc).num_reveal;
            int num = 1;
            //to chek if the doc  have empty palce for this book or not
            var number = db.patient.Where(s => s.Id_Doc == patient.Id_Doc).ToList().Count();

            if (number == 0)
            {
                patient.number = num;
                return patient.number;
            }
            else if (number == Num_Reaval || patient.ExistPatient(patient) == true)
            {
                return 0;
            }
            else
            {
                //the number_book of last patient that book in this doc
                int lastnumber = db.patient.Where(s => s.Id_Doc == patient.Id_Doc).ToList().OrderBy(s => s.Id_Doc).OrderBy(s => s.Id).LastOrDefault().number;
                patient.number = lastnumber + num;
                return patient.number;
            }
        }
        public virtual AspNetUsers AspNetUsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<data_Patient> data_Patient { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<data_Patient> data_Patient1 { get; set; }
        public virtual Doctor Doctor { get; set; }
    }
}
